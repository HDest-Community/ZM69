const HDLD_ZM69 = "z69";

class ZM69Rifle : HDWeapon{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "ZM69"
		//$Sprite "ZM69A0"

		weapon.slotnumber 8;
		weapon.kickback 50;
		weapon.selectionorder 27;
		inventory.pickupsound "misc/w_pkup";
		inventory.pickupmessage "You got the anti-materiel rifle!";
		weapon.bobrangex 0.22;
		weapon.bobrangey 0.9;
		scale 0.8;
		obituary "%o was forcefully penetrated by %k.";
		hdweapon.refid HDLD_ZM69;
		tag "ZM69 Anti-Materiel Rifle";
		inventory.icon "ZM69A0";
	}
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}
	override void postbeginplay(){
		super.postbeginplay();
		
		barrelwidth=1;
		barreldepth=3;
		barrellength=32;
	}
	override double gunmass(){
		double howmuch=18;
		return howmuch+weaponstatus[Z69S_MAG]*0.04;
	}
	override double weaponbulk(){
		double blx = 150;
		
		int mgg=weaponstatus[Z69S_MAG];
		
		return blx+(mgg<0?0:(ENC_50OMGMAG_LOADED+mgg*ENC_50OMG_LOADED));
	}
	override string,double getpickupsprite(){
		string spr;
		// A: +m -auto
		// B: -m -auto
		// C: +m +auto
		// D: -m +auto
		
		if (weaponstatus[0] & Z69F_CANFULLAUTO)
		{
			if (weaponstatus[Z69S_MAG]<0)
				spr = "D";
			else 
				spr = "C";
		}
		else
		{
			if (weaponstatus[Z69S_MAG]<0)
				spr = "B";
			else 
				spr = "A";
		}
		
		return "ZM69"..spr.."0",1.;
	}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("HD50OMGMag")));
			if(nextmagloaded>=10){
				sb.drawimage("OM10A0",(-50,-3),sb.DI_SCREEN_CENTER_BOTTOM,scale:(1.6,1.6));
			}else if(nextmagloaded<1){
				sb.drawimage("OM10B0",(-50,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.,scale:(1.6,1.6));
			}else sb.drawbar(
				"OMAGNORM","OMAGGREY",
				nextmagloaded,10,
				(-50,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("HD50OMGMag"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
		}
		
		int lod=max(hdw.weaponstatus[Z69S_MAG],0);
		sb.drawwepnum(lod,10);
		if (hdw.weaponstatus[0] & Z69F_ISJAMMED)
		{
			sb.drawwepdot(-16, -10, (1, 3));
			lod++;
		}
		else if (hdw.weaponstatus[Z69S_CHAMBER]==2)
		{
			sb.drawwepdot(-16, -10, (5, 1));
			lod++;
		}
		
		if (hdw.weaponstatus[0] & Z69F_CANFULLAUTO)
		{
			string llba="RBRSA3A7";
			if(hdw.weaponstatus[0]&Z69F_FULLAUTO)llba="STFULAUT";
			sb.drawimage(
				llba,(-24,-10),
				sb.DI_SCREEN_CENTER_BOTTOM|sb.DI_TRANSLATABLE|sb.DI_ITEM_RIGHT
			);
		}
	}
	override string gethelptext(){
		bool gl = false;
		bool glmode = gl;
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_ALTFIRE.."  Clear jam (if any)\n"
		..WEPHELP_RELOAD.."  Reload mag\n"
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOAD.."  Unload ".."magazine\n"
		..WEPHELP_ZOOM.." + "..WEPHELP_UNLOAD.." Make round\n"
		;
	}
	
	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc,string whichdot
	){
		{
			int cx,cy,cw,ch;
			[cx,cy,cw,ch]=Screen.GetClipRect();
			sb.SetClipRect(
				-16+bob.x,-4+bob.y,32,16,
				sb.DI_SCREEN_CENTER
			);
			vector2 bobb = bob * 2;
			bobb.y=clamp(bobb.y,-8,8);
			sb.drawimage(
				"frntsite",(0,0)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
				alpha:0.9,scale:(1.2,2)
			);
			sb.SetClipRect(cx,cy,cw,ch);
			sb.drawimage(
				"backsite",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
				scale:(1.4,1.2)
			);
			if(scopeview){
				int scaledyoffset=54;
				int scaledwidth=72;
				double degree=hdw.weaponstatus[Z69S_ZOOM]*0.1;
				double deg=1/degree;
				int cx,cy,cw,ch;
				[cx,cy,cw,ch]=screen.GetClipRect();
				sb.SetClipRect(
					-36+bob.x,18+bob.y,scaledwidth,scaledwidth,
					sb.DI_SCREEN_CENTER
				);
				string reticle=
					hdw.weaponstatus[0]&Z69F_ALTRETICLE?"reticle2":"reticle1";
				texman.setcameratotexture(hpc,"HDXCAM_BOSS",degree);
				sb.drawimage(
					"HDXCAM_BOSS",(0,scaledyoffset)+bob,
					sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
					scale:(0.5,0.5)
				);
				if(hdw.weaponstatus[0]&Z69F_FRONTRETICLE){
					sb.drawimage(
						reticle,(0,scaledyoffset)+bob*5,
						sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
						scale:(1.6,1.6)*deg
					);
				}else{
					sb.drawimage(
						reticle,(0,scaledyoffset)+bob,
						sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
						scale:(0.52,0.52)
					);
				}
				sb.drawimage(
					"scophole",(0,scaledyoffset)+bob*5,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
					scale:(0.95,0.95)
				);
				screen.SetClipRect(cx,cy,cw,ch);
				sb.drawimage(
					"libscope",(0,scaledyoffset)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER
				);
				sb.drawstring(
					sb.mAmountFont,string.format("%.1f",degree),
					(6+bob.x,89+bob.y),sb.DI_SCREEN_CENTER|sb.DI_TEXT_ALIGN_RIGHT,
					Font.CR_BLACK
				);
				sb.drawstring(
					sb.mAmountFont,string.format("%.1f",hdw.weaponstatus[Z69S_DROPADJUST]*0.1),
					(6+bob.x,13+bob.y),sb.DI_SCREEN_CENTER|sb.DI_TEXT_ALIGN_RIGHT,
					Font.CR_BLACK
				);
			}
		}
	}
	
	override void failedpickupunload(){
		failedpickupunloadmag(Z69S_MAG,"HD50OMGMag");
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,10);
			if(owner.countinv("HD50OMGAmmo"))owner.A_DropInventory("HD50OMGAmmo",20);
			else{
				int angchange = 0;
				if(angchange)owner.angle-=angchange;
				owner.A_DropInventory("HD50OMGMag",1);
			}
		}
	}
	override void ForceBasicAmmo(){
		owner.A_TakeInventory("HD50OMGAmmo");
		owner.A_TakeInventory("HD50OMGMag");
		owner.A_GiveInventory("HD50OMGMag");
	}
	override void tick(){
		super.tick();
		drainheat(Z69S_HEAT,8);
	}
	action void A_EjectBrass(bool nojam = false)
	{
		bool success;
		
		actor brsss = null;
		if(invoker.weaponstatus[Z69S_CHAMBER]==1)
		{
			int jamchance;
			if (invoker.weaponstatus[0] & Z69F_FULLAUTO)
			{
				jamchance = 100;
			}
			else if (invoker.weaponstatus[0] & Z69F_CANFUllAUTO)
			{
				jamchance = 2000;
			}
			else
			{
				jamchance = 4000;
			}
			
			if (!random(0, jamchance) && !nojam)
			{
				success = false;
				invoker.weaponstatus[0] |= Z69F_ISJAMMED;
				invoker.weaponstatus[Z69S_JAMFUCK] = 100;
				
				if (!random(0, 8))
				{
					invoker.weaponstatus[Z69S_JAMFUCK] += random(200, 300);
				}
				
				invoker.weaponstatus[Z69S_JAMFUCK] += random(0, 40);
			}
			else
			{
				double cosp = cos(pitch);
				[cosp,brsss]=A_SpawnItemEx("HDSpent50OMG",
					cosp*6,1,height-8-sin(pitch)*6,
					cosp*2,1,1-sin(pitch),
					0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				brsss.vel += vel;
				brsss.A_StartSound(brsss.bouncesound,CHAN_BODY, volume: 0.4);
				
				success = true;
			}
		}
		else if(invoker.weaponstatus[Z69S_CHAMBER]==2)
		{
			double fc=max(pitch*0.01,5);
			double cosp=cos(pitch);
			[cosp,brsss]=A_SpawnItemEx("HDLoose50OMG",
				cosp*12,1,height-8-sin(pitch)*12,
				cosp*fc,0.2*randompick(-1,1),-sin(pitch)*fc,
				0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
			);
			brsss.vel+=vel;
			brsss.A_StartSound(brsss.bouncesound,CHAN_BODY, volume: 0.4);
			
			success = true;
		}
		
		if (success)
		{
			invoker.weaponstatus[Z69S_CHAMBER] = 0;
		}
	}
	
	action void A_Chamber(bool unloadonly = false, bool nojam = false)
	{
		A_StartSound("weapons/libchamber",6, volume: 0.3);
		
		if (!(invoker.weaponstatus[0] & Z69f_ISJAMMED))
		{
			if (invoker.weaponstatus[Z69S_CHAMBER] != 0)
			{
				A_EjectBrass(nojam);
			}
			
			if(!unloadonly && invoker.weaponstatus[Z69S_MAG]>0)
			{
				int jamchance;
				if (invoker.weaponstatus[0] & Z69F_FULLAUTO)
				{
					jamchance = 100;
				}
				else if (invoker.weaponstatus[0] & Z69F_CANFUllAUTO)
				{
					jamchance = 1000;
				}
				else
				{
					jamchance = 3000;
				}
				
				if (random(0, jamchance) || nojam)
				{
					invoker.weaponstatus[Z69S_MAG]--;
					invoker.weaponstatus[Z69S_CHAMBER] = 2;
				}
			}
		}
	}
	
	states
	{
	select0:
		Z69G A 0;
		goto select0bfg;
	deselect0:
		Z69G A 0;
		goto deselect0bfg;
	ready:
		Z69G A 1{
			if(pressingzoom()){
				if(player.cmd.buttons&BT_USE){
					A_ZoomAdjust(Z69S_DROPADJUST,0,600,BT_USE);
				}else if(invoker.weaponstatus[0]&Z69F_FRONTRETICLE)A_ZoomAdjust(Z69S_ZOOM,15,40);
				else A_ZoomAdjust(Z69S_ZOOM,4,70);
				A_WeaponReady(WRF_NONE);
			}else A_WeaponReady(WRF_ALL);
		}goto readyend;
	user3:
		---- A 0;
		//goto super::user3;
		---- A 0 A_MagManager("HD50OMGMag");
		goto ready;

	fire:
		Z69G A 0
		{
			setweaponstate("firegun");
		}
	hold:
		Z69G A 1
		{
			if (!(invoker.weaponstatus[0] & Z69F_FULLAUTO)
				|| invoker.weaponstatus[Z69S_CHAMBER] != 2)
			setweaponstate("nope");
		}
		goto shoot;

	firegun:
		Z69G A 0;
	shoot:
		Z69G A 1
		{
			if(invoker.weaponstatus[Z69S_CHAMBER]==2)
				A_Gunflash();
			else
				setweaponstate("chamber_manual");
				
			A_WeaponReady(WRF_NONE);
		}
		Z69G B 1 A_EjectBrass();
		Z69G A 4
		{
			if (invoker.weaponstatus[0] & Z69F_CANFULLAUTO)
			{
				A_SetTics(3);
			}
		}
		Z69G A 0 A_Chamber();
		Z69G A 0 A_Refire();
		goto nope;
	flash:	
		Z69F A 1 bright{
			A_Light1();
			A_StartSound("weapons/zm69fire",1);

			HDBulletActor.FireBullet(self,"HDB_50OMG",
				aimoffy:(-1./600.)*invoker.weaponstatus[Z69S_DROPADJUST]
			);
			
			{
				HDFlashAlpha(32);
				A_ZoomRecoil(0.95);
				A_MuzzleClimb(
					0,0,
					-0.2,-0.8,
					-frandom(0.5,0.9),-frandom(3.2,4.0),
					-frandom(0.5,0.9),-frandom(3.2,4.0)
				);
			}

			invoker.weaponstatus[Z69S_CHAMBER]=1;
			invoker.weaponstatus[Z69S_HEAT]+=2;
			A_AlertMonsters();
		}
		goto lightdone;
	chamber_manual:
		Z69G A 1 offset(-1,34){
			if(
				invoker.weaponstatus[Z69S_CHAMBER]==2
				||invoker.weaponstatus[Z69S_MAG] < 1
			)setweaponstate("nope");
		}
		Z69G B 8 offset(-2,36)A_StartSound("weapons/libchamber");
		Z69G B 4 offset(-2,38)A_Chamber(nojam: true);
		Z69G A 1 offset(-1,34);
		goto nope;	


	firemode:
		---- A 0 {
			if (invoker.weaponstatus[0] & Z69F_CANFULLAUTO)
			{
				invoker.weaponstatus[0] ^= Z69F_FULLAUTO;
			}
		}
		goto nope;


	unloadchamber:
		Z69G B 1 offset(-1,34){
			if(
				invoker.weaponstatus[Z69S_CHAMBER]<1
			)setweaponstate("nope");
		}
		Z69G B 4 offset(-2,36)A_Chamber(nojam: true);
		Z69G B 1 offset(-2,38);
		Z69G A 1 offset(-1,34);
		goto nope;

	loadchamber:
		Z69G A 0 A_JumpIf(invoker.weaponstatus[Z69S_CHAMBER]>0,"nope");
		Z69G A 0 A_JumpIf(!countinv("HD50OMGAmmo"),"nope");
		Z69G A 1 offset(0,34) A_StartSound("weapons/pocket",CHAN_WEAPON);
		Z69G A 1 offset(2,36);
		Z69G B 4 offset(5,40);
		Z69G B 4 offset(4,39){
			if(countinv("HD50OMGAmmo")){
				A_TakeInventory("HD50OMGAmmo",1,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[Z69S_CHAMBER]=2;
				A_StartSound("weapons/libchamber2",CHAN_WEAPON);
				A_StartSound("weapons/libchamber2a",6, volume: 0.7);
			}
		}
		Z69G B 7 offset(5,37);
		Z69G B 1 offset(2,36);
		Z69G A 1 offset(0,34);
		goto readyend;

	user4:
	unload:
		---- A 1
		{
			if (pressingzoom())
			{
				if ((countinv("SevenMilBrass") >= 2 && countinv("FourMilAmmo") >= 10)
					|| invoker.weaponstatus[Z69S_ROUNDPROG] > 0)
				{
					return resolvestate("makeround");
				}
				else
				{
					return resolvestate("nope");
				}
			}
			else
			{
				return resolvestate(null);
			}
		}
		Z69G A 0{
			invoker.weaponstatus[0]|=Z69F_JUSTUNLOAD;
			if(
				invoker.weaponstatus[Z69S_MAG]>=0  
			){
				return resolvestate("unmag");
			}else if(
				invoker.weaponstatus[Z69S_CHAMBER]>0  
			){
				return resolvestate("unloadchamber");
			}
			return resolvestate("nope");
		}
	reload:
		Z69G A 0{
			int inmag=invoker.weaponstatus[Z69S_MAG];
			invoker.weaponstatus[0]&=~Z69F_JUSTUNLOAD;
			if(
				//no point reloading
				inmag>=10
				||(
					//no mags to load and can't directly load chamber
					!countinv("HD50OMGMag")
					&&(
						inmag>=0
						||invoker.weaponstatus[Z69S_CHAMBER]>0
						||!countinv("HD50OMGAmmo")
					)
				)
			)return resolvestate("nope");
			else if(
				//no mag, empty chamber, have loose rounds
				inmag<0
				&&invoker.weaponstatus[Z69S_CHAMBER]<1
				&&countinv("HD50OMGAmmo")
				&&(
					pressinguse()
					||HDMagAmmo.NothingLoaded(self,"hd50omgmag")
				)
			)return resolvestate("loadchamber");
			else if(
				invoker.weaponstatus[Z69S_MAG]>0  
			){
				//if full mag and unchambered, chamber
				if(
					invoker.weaponstatus[Z69S_MAG]>=10  
					&&invoker.weaponstatus[Z69S_CHAMBER]!=2
				){
					return resolvestate("chamber_manual");
				}				
			}return resolvestate("unmag");
		}

	unmag:
		Z69G A 1 offset(0,34);
		Z69G A 1 offset(2,36);
		Z69G B 1 offset(4,40);
		Z69G B 8 offset(8,42){
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
			A_StartSound("weapons/rifleclick2",CHAN_WEAPON);
		}
		Z69G B 16 offset(14,46){
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
		}
		Z69G B 0{
			A_StartSound ("weapons/rifleload");
			int magamt=invoker.weaponstatus[Z69S_MAG];
			if(magamt<0){setweaponstate("magout");return;}
			invoker.weaponstatus[Z69S_MAG]=-1;
			if(
				!PressingReload()
				&&!PressingUnload()
			){
				HDMagAmmo.SpawnMag(self,"HD50OMGMag",magamt);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"HD50OMGMag",magamt);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		Z69G B 7 offset(12,52)A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		Z69G B 0 A_StartSound("weapons/pocket");
		Z69G BB 7 offset(14,54)A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		Z69G B 0{
		}goto magout;
	magout:
		Z69G B 4{
			invoker.weaponstatus[Z69S_MAG]=-1;
			if(invoker.weaponstatus[0]&Z69F_JUSTUNLOAD)setweaponstate("reloaddone");
		}goto loadmag;

	loadmag:
		Z69G B 0 A_StartSound("weapons/pocket",CHAN_WEAPON);
		Z69G BB 7 offset(14,54)A_MuzzleClimb(frandom(-0.2,0.4),frandom(-0.2,0.8));
		Z69G B 6 offset(12,52){
			let mmm=hdmagammo(findinventory("HD50OMGMag"));
			if(mmm){
				invoker.weaponstatus[Z69S_MAG]=mmm.TakeMag(true);
				A_StartSound("weapons/rifleclick",CHAN_BODY);
				A_StartSound("weapons/rifleload",CHAN_WEAPON);
			}
		}
		Z69G B 2 offset(8,46) A_StartSound("weapons/rifleclick2",CHAN_WEAPON);
		goto reloaddone;

	reloaddone:
		Z69G B 1 offset (4,40);
		Z69G A 1 offset (2,36){
			if(
				invoker.weaponstatus[Z69S_CHAMBER]!=2
				&&invoker.weaponstatus[Z69S_MAG]>0  
			)
			setweaponstate("chamber_manual");
		}
		Z69G A 1 offset (0,34);
		goto nope;


	altfire:
		Z69G A 0 
		{
			if (invoker.weaponstatus[0] & Z69F_ISJAMMED)
			{
				A_WeaponBusy(true);
				setweaponstate("clearjam");
			}
			else if (invoker.weaponstatus[Z69S_CHAMBER] != 2)
			{
				setweaponstate("chamber_manual");
			}
		}
		goto nope;
		
	clearjam:
		Z69G B 1 offset(2, 36);
		Z69G B 1 offset(0, 34) {
			if (random(0, 100) > invoker.weaponstatus[Z69S_JAMFUCK])
			{
				setweaponstate("jamcleared");
			}
			else
			{
				invoker.weaponstatus[Z69S_JAMFUCK] -= random(1, 10);
			}
		}
		Z69G B 1 offset(4, 36);
		Z69G B 0 A_Refire("clearjam");
		goto nope;
		
	jamcleared:
		Z69G B 2 offset (0, 34) {
			invoker.weaponstatus[0] &=~ Z69F_ISJAMMED;
			A_Chamber(nojam: true);
			A_WeaponBusy(false);
		}
		Z69G B 2 offset (2, 36);
		Z69G B 2 offset (4, 38);
		Z69G B 2 offset (6, 40);
		goto nope;
	althold:
		Z69G A 0;
		goto nope;
		
	altreload:
		Z69G A 0;
		goto nope;

	spawn:
		ZM69 ABCD -1 nodelay{
			sprite=getspriteindex("ZM69A0");
			// A: +m -auto
			// B: -m -auto
			// C: +m +auto
			// D: -m +auto
			if (invoker.weaponstatus[0] & Z69F_CANFULLAUTO)
			{
				if (invoker.weaponstatus[Z69S_MAG]<0)
					frame=3;
				else 
					frame=2;
			}
			else
			{
				if (invoker.weaponstatus[Z69S_MAG]<0)
					frame=1;
				else 
					frame=0;
			}
		}
		ZM69 ABCD -1;
		stop;
		
	makeround:
		Z69G A 1
		{
			if (invoker.weaponstatus[Z69S_ROUNDPROG] < 1)
			{
				return resolvestate("insertmats");
			}
			else if (invoker.weaponstatus[Z69S_ROUNDPROG] < 100)
			{
				if (pressingunload() || pressingzoom())
				{
					return resolvestate("workonround");
				}
			}
			else if (invoker.weaponstatus[Z69S_ROUNDPROG] >= 100)
			{
				return resolvestate("finishround");
			}
			
			return resolvestate(null);
		}
		goto nope;
	
	insertmats:
		Z69G B 2 offset (2, 36);
		Z69G B 2 offset (4, 38);
		Z69G B 2 offset (6, 40);
		Z69G B 4 offset (6, 40);
		Z69G B 10 offset (6, 40)
		{
			A_TakeInventory("SevenMilBrass", 2);
			A_TakeInventory("FourMilAmmo", 10);
			
			A_StartSound("weapons/rifleclick2",CHAN_WEAPON);
			invoker.weaponstatus[Z69S_ROUNDPROG]++;
		}
		Z69G B 4 offset (6, 40)
		{
			A_StartSound("weapons/rifleclick",CHAN_WEAPON);
		}
		Z69G B 2 offset (6, 40);
		Z69G B 2 offset (4, 38);
		Z69G B 2 offset (2, 36);
		Z69G B 2;
		goto makeround;
	
	workonround:
		Z69G B 1 offset(2, 36);
		Z69G B 1 offset(0, 34)
		{
			invoker.weaponstatus[Z69S_ROUNDPROG]++;
			A_StartSound("roundmaker/chug1",8);
			A_StartSound("roundmaker/chug2",9);
		}
		Z69G B 1 offset(4, 36);
		goto makeround;
		
	finishround:
		Z69G B 2 offset (2, 36);
		Z69G B 2 offset (4, 38);
		Z69G B 2 offset (6, 40);
		Z69G B 4 offset (4, 38)
		{
			A_StartSound("weapons/rifleclick",CHAN_WEAPON);
		}
		Z69G B 4 offset (6, 40)
		{
				actor brsss;
				
				double fc=max(pitch*0.01,5);
				double cosp=cos(pitch);
				[cosp,brsss]=A_SpawnItemEx("HDLoose50OMG",
					cosp*12,1,height-8-sin(pitch)*12,
					cosp*fc,0.2*randompick(-1,1),-sin(pitch)*fc,
					0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				brsss.vel+=vel;
				brsss.A_StartSound(brsss.bouncesound,CHAN_BODY, volume: 0.4);
				
				invoker.weaponstatus[Z69S_ROUNDPROG] = 0;
		}
		goto nope;
	}
	
	override void InitializeWepStats(bool idfa){
		weaponstatus[Z69S_MAG]=10;
		weaponstatus[Z69S_CHAMBER]=2;
		if(!idfa && !owner){
			if(randompick(0,0,1))weaponstatus[0]|=Z69F_FRONTRETICLE;
			if(randompick(0,0,1))weaponstatus[0]|=Z69F_ALTRETICLE;
			weaponstatus[Z69S_ZOOM]=30;
			weaponstatus[Z69S_HEAT]=0;
			weaponstatus[Z69S_DROPADJUST]=165;
		}
	}
	override void loadoutconfigure(string input){
		int altreticle=getloadoutvar(input,"altreticle",1);
		if(!altreticle)weaponstatus[0]&=~Z69F_ALTRETICLE;
		else if(altreticle>0)weaponstatus[0]|=Z69F_ALTRETICLE;

		int frontreticle=getloadoutvar(input,"frontreticle",1);
		if(!frontreticle)weaponstatus[0]&=~Z69F_FRONTRETICLE;
		else if(frontreticle>0)weaponstatus[0]|=Z69F_FRONTRETICLE;

		int bulletdrop=getloadoutvar(input,"bulletdrop",3);
		if(bulletdrop>=0)weaponstatus[Z69S_DROPADJUST]=clamp(bulletdrop,0,600);

		int zoom=getloadoutvar(input,"zoom",3);
		if(zoom>=0)weaponstatus[Z69S_ZOOM]=
			(weaponstatus[0]&Z69F_FRONTRETICLE)?
			clamp(zoom,20,40):
			clamp(zoom,6,70);
			
		int canfullauto = getloadoutvar(input, "auto", 1);
		if (!canfullauto)
			weaponstatus[0] &=~ Z69F_CANFULLAUTO;
		else if (canfullauto > 0)
			weaponstatus[0] |= Z69F_CANFULLAUTO;
	}
}
enum zm69status{
	Z69F_JUSTUNLOAD 	= 1 << 0,
	Z69F_FRONTRETICLE 	= 1 << 1,
	Z69F_ALTRETICLE 	= 1 << 2,
	Z69F_UNLOADONLY 	= 1 << 3,
	Z69F_FULLAUTO 		= 1 << 4,
	Z69F_CANFULLAUTO 	= 1 << 5,
	Z69F_ISJAMMED		= 1 << 6,

	Z69S_FLAGS			= 0,
	Z69S_CHAMBER		= 1,
	Z69S_MAG			= 2, //-1 is empty
	Z69S_ZOOM			= 3,
	Z69S_HEAT			= 4,
	Z69S_DROPADJUST		= 5,
	Z69S_JAMFUCK		= 6,
	Z69S_ROUNDPROG		= 7,
};

class ZM69Random : IdleDummy
{
	
	states
	{
		spawn:
			TNT1 A 0 nodelay {
				let lll = ZM69Rifle(spawn("ZM69Rifle", pos, ALLOW_REPLACE));
				
				if(!lll)
					return;
					
				lll.special=special;
				
				lll.vel=vel;
				
				if (!random(0, 3))
				{
					lll.weaponstatus[0] |= Z69F_CANFULLAUTO;
				}
				
				lll.vel = vel;
				
				actor otherspawn;
				if (!random(0, 2))
				{
					otherspawn = spawn("HD50OMGBoxPickup",pos+(5,0,0),ALLOW_REPLACE);
					otherspawn.vel = vel;
				}
				otherspawn = spawn("HD50OMGMag",pos+(8,0,0),ALLOW_REPLACE);
				otherspawn.vel = vel;
			}
			stop;
	}
}